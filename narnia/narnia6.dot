digraph code {
	graph [bgcolor=white];
	node [color=lightgray, style=filled shape=box fontname="Courier" fontsize="8"];
	"0x004007c9_0x004007c9" -> "0x004007c9_0x0040080a" [color="green"];
	"0x004007c9_0x004007c9" -> "0x004007c9_0x004007e7" [color="red"];
 "0x004007c9_0x004007c9" [color="red", label="/ function: sym.main (441)\l| 0x004007c9  sym.main:\l| 0x004007c9   push rbp\l| 0x004007ca   mov rbp, rsp\l| 0x004007cd   push rbx\l| 0x004007ce   sub rsp, 0x48\l| 0x004007d2   mov [rbp-0x44], edi\l| 0x004007d5   mov [rbp-0x50], rsi\l| 0x004007d9   mov qword [rbp-0x20], imp.puts\l| 0x004007e1   cmp dword [rbp-0x44], 0x3\l| 0x004007e5   jz loc.0040080a\l", URL="sym.main/0x004007c9"]
	"0x004007c9_0x004007e7" -> "0x004007c9_0x0040080a" [color="blue"];
 "0x004007c9_0x004007e7" [color="red", label="| 0x004007e7   mov rax, [rbp-0x50]\l| 0x004007eb   mov rax, [rax]\l| 0x004007ee   mov rsi, rax\l| 0x004007f1   mov edi, str.sb1b2\l| 0x004007f6   mov eax, 0x0\l| 0x004007fb   call dword imp.printf\l|    ; imp.printf()\l| 0x00400800   mov edi, 0xffffffff\l| 0x00400805   call dword imp.exit\l|    ; imp.exit()\l", URL="sym.main/0x004007e7"]
	"0x004007c9_0x0040080a" -> "0x004007c9_0x0040085d" [color="blue"];
 "0x004007c9_0x0040080a" [color="red", label="  ; CODE (JMP) XREF 0x004007e5 (sym.main)\l/ loc: loc.0040080a (376)\l| 0x0040080a  loc.0040080a:\l| 0x0040080a   mov dword [rbp-0x14], 0x0\l| 0x00400811   jmp loc.0040085d\l", URL="sym.main/0x0040080a"]
	"0x004007c9_0x00400813" -> "0x004007c9_0x0040085d" [color="blue"];
 "0x004007c9_0x00400813" [color="red", label="; MOV rax = [0x600da8] = 0x654428203a434347 \l  ; CODE (JMP) XREF 0x00400877 (sym.main)\l/ loc: loc.00400813 (367)\l| 0x00400813  loc.00400813:\l| 0x00400813   mov rax, [rip+0x20058e]\l| 0x0040081a   mov edx, [rbp-0x14]\l| 0x0040081d   movsxd rdx, edx\l| 0x00400820   shl rdx, 0x3\l| 0x00400824   add rax, rdx\l| 0x00400827   mov rax, [rax]\l| 0x0040082a   mov rdi, rax\l| 0x0040082d   call dword imp.strlen\l|    ; imp.strlen()\l| 0x00400832   mov rdx, rax\l; MOV rax = [0x600da8] = 0x654428203a434347 \l| 0x00400835   mov rax, [rip+0x20056c]\l| 0x0040083c   mov ecx, [rbp-0x14]\l| 0x0040083f   movsxd rcx, ecx\l| 0x00400842   shl rcx, 0x3\l| 0x00400846   add rax, rcx\l| 0x00400849   mov rax, [rax]\l| 0x0040084c   mov esi, 0x0\l| 0x00400851   mov rdi, rax\l| 0x00400854   call dword imp.memset\l|    ; imp.memset()\l| 0x00400859   add dword [rbp-0x14], 0x1\l", URL="sym.main/0x00400813"]
	"0x004007c9_0x0040085d" -> "0x004007c9_0x00400813" [color="green"];
	"0x004007c9_0x0040085d" -> "0x004007c9_0x00400879" [color="red"];
 "0x004007c9_0x0040085d" [color="red", label="; MOV rax = [0x600da8] = 0x654428203a434347 \l  ; CODE (JMP) XREF 0x00400811 (sym.main)\l/ loc: loc.0040085d (293)\l| 0x0040085d  loc.0040085d:\l| 0x0040085d   mov rax, [rip+0x200544]\l| 0x00400864   mov edx, [rbp-0x14]\l| 0x00400867   movsxd rdx, edx\l| 0x0040086a   shl rdx, 0x3\l| 0x0040086e   add rax, rdx\l| 0x00400871   mov rax, [rax]\l| 0x00400874   test rax, rax\l| 0x00400877   jnz loc.00400813\l", URL="sym.main/0x0040085d"]
	"0x004007c9_0x00400879" -> "0x004007c9_0x004008cc" [color="blue"];
 "0x004007c9_0x00400879" [color="red", label="| 0x00400879   mov dword [rbp-0x14], 0x3\l| 0x00400880   jmp loc.004008cc\l", URL="sym.main/0x00400879"]
	"0x004007c9_0x00400882" -> "0x004007c9_0x004008cc" [color="blue"];
 "0x004007c9_0x00400882" [color="red", label="  ; CODE (JMP) XREF 0x004008e6 (sym.main)\l/ loc: loc.00400882 (256)\l| 0x00400882  loc.00400882:\l| 0x00400882   mov eax, [rbp-0x14]\l| 0x00400885   cdqe\l| 0x00400887   lea rdx, [rax*8+0x0]\l| 0x0040088f   mov rax, [rbp-0x50]\l| 0x00400893   add rax, rdx\l| 0x00400896   mov rax, [rax]\l| 0x00400899   mov rdi, rax\l| 0x0040089c   call dword imp.strlen\l|    ; imp.strlen()\l| 0x004008a1   mov rdx, rax\l| 0x004008a4   mov eax, [rbp-0x14]\l| 0x004008a7   cdqe\l| 0x004008a9   lea rcx, [rax*8+0x0]\l| 0x004008b1   mov rax, [rbp-0x50]\l| 0x004008b5   add rax, rcx\l| 0x004008b8   mov rax, [rax]\l| 0x004008bb   mov esi, 0x0\l| 0x004008c0   mov rdi, rax\l| 0x004008c3   call dword imp.memset\l|    ; imp.memset()\l| 0x004008c8   add dword [rbp-0x14], 0x1\l", URL="sym.main/0x00400882"]
	"0x004007c9_0x004008cc" -> "0x004007c9_0x00400882" [color="green"];
	"0x004007c9_0x004008cc" -> "0x004007c9_0x004008e8" [color="red"];
 "0x004007c9_0x004008cc" [color="red", label="  ; CODE (JMP) XREF 0x00400880 (sym.main)\l/ loc: loc.004008cc (182)\l| 0x004008cc  loc.004008cc:\l| 0x004008cc   mov eax, [rbp-0x14]\l| 0x004008cf   cdqe\l| 0x004008d1   lea rdx, [rax*8+0x0]\l| 0x004008d9   mov rax, [rbp-0x50]\l| 0x004008dd   add rax, rdx\l| 0x004008e0   mov rax, [rax]\l| 0x004008e3   test rax, rax\l| 0x004008e6   jnz loc.00400882\l", URL="sym.main/0x004008cc"]
	"0x004007c9_0x004008e8" -> "0x004007c9_0x0040093d" [color="green"];
	"0x004007c9_0x004008e8" -> "0x004007c9_0x00400933" [color="red"];
 "0x004007c9_0x004008e8" [color="red", label="| 0x004008e8   mov rax, [rbp-0x50]\l| 0x004008ec   add rax, 0x8\l| 0x004008f0   mov rdx, [rax]\l| 0x004008f3   lea rax, [rbp-0x30]\l| 0x004008f7   mov rsi, rdx\l| 0x004008fa   mov rdi, rax\l| 0x004008fd   call dword imp.strcpy\l|    ; imp.strcpy()\l| 0x00400902   mov rax, [rbp-0x50]\l| 0x00400906   add rax, 0x10\l| 0x0040090a   mov rdx, [rax]\l| 0x0040090d   lea rax, [rbp-0x40]\l| 0x00400911   mov rsi, rdx\l| 0x00400914   mov rdi, rax\l| 0x00400917   call dword imp.strcpy\l|    ; imp.strcpy()\l| 0x0040091c   mov rax, [rbp-0x20]\l| 0x00400920   mov rbx, rax\l| 0x00400923   and ebx, 0xff000000\l| 0x00400929   call dword sym.get_sp\l|    ; sym.get_sp()\l| 0x0040092e   cmp rbx, rax\l| 0x00400931   jnz loc.0040093d\l", URL="sym.main/0x004008e8"]
	"0x004007c9_0x00400933" -> "0x004007c9_0x0040093d" [color="blue"];
 "0x004007c9_0x00400933" [color="red", label="| 0x00400933   mov edi, 0xffffffff\l| 0x00400938   call dword imp.exit\l|    ; imp.exit()\l", URL="sym.main/0x00400933"]
 "0x004007c9_0x0040093d" [color="red", label="  ; CODE (JMP) XREF 0x00400931 (sym.main)\l/ loc: loc.0040093d (69)\l| 0x0040093d  loc.0040093d:\l| 0x0040093d   mov eax, 0x0\l| 0x00400942   call dword imp.geteuid\l|    ; imp.geteuid()\l| 0x00400947   mov ebx, eax\l| 0x00400949   mov eax, 0x0\l| 0x0040094e   call dword imp.geteuid\l|    ; imp.geteuid()\l| 0x00400953   mov esi, ebx\l| 0x00400955   mov edi, eax\l| 0x00400957   mov eax, 0x0\l| 0x0040095c   call dword imp.setreuid\l|    ; imp.setreuid()\l| 0x00400961   lea rdx, [rbp-0x30]\l| 0x00400965   mov rax, [rbp-0x20]\l| 0x00400969   mov rdi, rdx\l| 0x0040096c   call rax\l|    ; unk()\l| 0x0040096e   mov edi, 0x1\l| 0x00400973   call dword imp.exit\l|    ; imp.exit()\l| 0x00400978   nop\l| 0x00400979   nop\l| 0x0040097a   nop\l| 0x0040097b   nop\l| 0x0040097c   nop\l| 0x0040097d   nop\l| 0x0040097e   nop\l| 0x0040097f   nop\l/ function: sym.__libc_csu_fini (2)\l| 0x00400980  sym.__libc_csu_fini:\l| 0x00400980   rep ret\l", URL="sym.main/0x0040093d"]
 "0x004007bc_0x004007bc" [color="red", label="  ; CODE (CALL) XREF 0x00400929 (sym.main)\l/ function: sym.get_sp (13)\l| 0x004007bc  sym.get_sp:\l| 0x004007bc   push rbp\l| 0x004007bd   mov rbp, rsp\l| 0x004007c0   mov eax, esp\l| 0x004007c2   and eax, 0xff000000\l| 0x004007c7   pop rbp\l\ 0x004007c8   ret\l", URL="sym.get_sp/0x004007bc"]
 "0x004006b0_0x004006b0" [color="red", label="                ; [14] va=0x004006b0 pa=0x000006b0 sz=876 vsz=876 rwx=-r-x .text\l/ function: section..text (42)\l| 0x004006b0  section..text:\l| 0x004006b0   xor ebp, ebp\l| 0x004006b2   mov r9, rdx\l| 0x004006b5   pop rsi\l| 0x004006b6   mov rdx, rsp\l| 0x004006b9   and rsp, 0xfffffffffffffff0\l| 0x004006bd   push rax\l| 0x004006be   push rsp\l| 0x004006bf   mov r8, sym.__libc_csu_fini\l| 0x004006c6   mov rcx, sym.__libc_csu_init\l| 0x004006cd   mov rdi, sym.main\l| 0x004006d4   call dword imp.__libc_start_main\l|    ; imp.__libc_start_main()\l\ 0x004006d9   hlt\l", URL="section..text/0x004006b0"]
	"0x004006dc_0x004006dc" -> "0x004006dc_0x004006ee" [color="green"];
	"0x004006dc_0x004006dc" -> "0x004006dc_0x004006ec" [color="red"];
 "0x004006dc_0x004006dc" [color="red", label="  ; CODE (CALL) XREF 0x004005fc (section..init)\l/ function: sym.call_gmon_start (23)\l| 0x004006dc  sym.call_gmon_start:\l| 0x004006dc   sub rsp, 0x8\l; MOV rax = [0x600d30] = 0x0 \l| 0x004006e0   mov rax, [rip+0x200649]\l| 0x004006e7   test rax, rax\l| 0x004006ea   jz loc.004006ee\l", URL="sym.call_gmon_start/0x004006dc"]
	"0x004006dc_0x004006ec" -> "0x004006dc_0x004006ee" [color="blue"];
 "0x004006dc_0x004006ec" [color="red", label="| 0x004006ec   call rax\l|    ; unk()\l", URL="sym.call_gmon_start/0x004006ec"]
 "0x004006dc_0x004006ee" [color="red", label="  ; CODE (JMP) XREF 0x004006ea (sym.call_gmon_start)\l/ loc: loc.004006ee (5)\l| 0x004006ee  loc.004006ee:\l| 0x004006ee   add rsp, 0x8\l\ 0x004006f2   ret\l", URL="sym.call_gmon_start/0x004006ee"]
	"0x00400700_0x00400700" -> "0x00400700_0x00400717" [color="green"];
	"0x00400700_0x00400700" -> "0x00400700_0x00400715" [color="red"];
 "0x00400700_0x00400700" [color="red", label="  ; CODE (CALL) XREF 0x0040077d (sym.__do_global_dtors_aux)\l/ function: sym.deregister_tm_clones (23)\l| 0x00400700  sym.deregister_tm_clones:\l| 0x00400700   mov eax, 0x600daf\l| 0x00400705   push rbp\l| 0x00400706   sub rax, sym.environGLIBC_2.2.5\l| 0x0040070c   cmp rax, 0xe\l| 0x00400710   mov rbp, rsp\l| 0x00400713   ja loc.00400717\l", URL="sym.deregister_tm_clones/0x00400700"]
 "0x00400700_0x00400715" [color="red", label="  ; CODE (JMP) XREF 0x0040071f (loc.00400717)\l/ loc: loc.00400715 (2)\l| 0x00400715  loc.00400715:\l| 0x00400715   pop rbp\l\ 0x00400716   ret\l", URL="sym.deregister_tm_clones/0x00400715"]
	"0x00400700_0x00400717" -> "0x00400700_0x00400715" [color="green"];
	"0x00400700_0x00400717" -> "0x00400700_0x00400721" [color="red"];
 "0x00400700_0x00400717" [color="red", label="  ; CODE (JMP) XREF 0x00400713 (sym.deregister_tm_clones)\l/ loc: loc.00400717 (18)\l| 0x00400717  loc.00400717:\l| 0x00400717   mov eax, 0x0\l| 0x0040071c   test rax, rax\l| 0x0040071f   jz loc.00400715\l", URL="sym.deregister_tm_clones/0x00400717"]
 "0x00400700_0x00400721" [color="red", label="| 0x00400721   pop rbp\l| 0x00400722   mov edi, sym.environGLIBC_2.2.5\l| 0x00400727   jmp rax\l", URL="sym.deregister_tm_clones/0x00400721"]
	"0x00400730_0x00400730" -> "0x00400730_0x00400757" [color="green"];
	"0x00400730_0x00400730" -> "0x00400730_0x00400755" [color="red"];
 "0x00400730_0x00400730" [color="red", label="  ; CODE (JMP) XREF 0x004007b5 (loc.004007b5)\l  ; CODE (JMP) XREF 0x004007b0 (sym.frame_dummy)\l/ function: sym.register_tm_clones (39)\l| 0x00400730  sym.register_tm_clones:\l| 0x00400730   mov eax, sym.environGLIBC_2.2.5\l| 0x00400735   push rbp\l| 0x00400736   sub rax, sym.environGLIBC_2.2.5\l| 0x0040073c   sar rax, 0x3\l| 0x00400740   mov rbp, rsp\l| 0x00400743   mov rdx, rax\l| 0x00400746   shr rdx, 0x3f\l| 0x0040074a   add rax, rdx\l| 0x0040074d   mov rsi, rax\l| 0x00400750   sar rsi, 1\l| 0x00400753   jnz loc.00400757\l", URL="sym.register_tm_clones/0x00400730"]
 "0x00400730_0x00400755" [color="red", label="  ; CODE (JMP) XREF 0x0040075f (loc.00400757)\l/ loc: loc.00400755 (2)\l| 0x00400755  loc.00400755:\l| 0x00400755   pop rbp\l\ 0x00400756   ret\l", URL="sym.register_tm_clones/0x00400755"]
	"0x00400730_0x00400757" -> "0x00400730_0x00400755" [color="green"];
	"0x00400730_0x00400757" -> "0x00400730_0x00400761" [color="red"];
 "0x00400730_0x00400757" [color="red", label="  ; CODE (JMP) XREF 0x00400753 (sym.register_tm_clones)\l/ loc: loc.00400757 (18)\l| 0x00400757  loc.00400757:\l| 0x00400757   mov edx, 0x0\l| 0x0040075c   test rdx, rdx\l| 0x0040075f   jz loc.00400755\l", URL="sym.register_tm_clones/0x00400757"]
 "0x00400730_0x00400761" [color="red", label="| 0x00400761   pop rbp\l| 0x00400762   mov edi, sym.environGLIBC_2.2.5\l| 0x00400767   jmp rdx\l", URL="sym.register_tm_clones/0x00400761"]
	"0x00400770_0x00400770" -> "0x00400770_0x0040078a" [color="green"];
	"0x00400770_0x00400770" -> "0x00400770_0x00400779" [color="red"];
 "0x00400770_0x00400770" [color="red", label="/ function: sym.__do_global_dtors_aux (28)\l| 0x00400770  sym.__do_global_dtors_aux:\l| 0x00400770   cmp byte [rip+0x200639], 0x0\l| 0x00400777   jnz loc.0040078a\l", URL="sym.__do_global_dtors_aux/0x00400770"]
	"0x00400770_0x00400779" -> "0x00400770_0x0040078a" [color="blue"];
 "0x00400770_0x00400779" [color="red", label="| 0x00400779   push rbp\l| 0x0040077a   mov rbp, rsp\l| 0x0040077d   call dword sym.deregister_tm_clones\l|    ; sym.deregister_tm_clones()\l| 0x00400782   pop rbp\l| 0x00400783   mov byte [rip+0x200626], 0x1\l", URL="sym.__do_global_dtors_aux/0x00400779"]
 "0x00400770_0x0040078a" [color="red", label="  ; CODE (JMP) XREF 0x00400777 (sym.__do_global_dtors_aux)\l/ loc: loc.0040078a (2)\l| 0x0040078a  loc.0040078a:\l| 0x0040078a   rep ret\l", URL="sym.__do_global_dtors_aux/0x0040078a"]
	"0x00400790_0x00400730" -> "0x00400790_0x00400757" [color="green"];
	"0x00400790_0x00400730" -> "0x00400790_0x00400755" [color="red"];
 "0x00400790_0x00400730" [color="red", label="  ; CODE (JMP) XREF 0x004007b5 (loc.004007b5)\l  ; CODE (JMP) XREF 0x004007b0 (sym.frame_dummy)\l/ function: sym.register_tm_clones (39)\l| 0x00400730  sym.register_tm_clones:\l| 0x00400730   mov eax, sym.environGLIBC_2.2.5\l| 0x00400735   push rbp\l| 0x00400736   sub rax, sym.environGLIBC_2.2.5\l| 0x0040073c   sar rax, 0x3\l| 0x00400740   mov rbp, rsp\l| 0x00400743   mov rdx, rax\l| 0x00400746   shr rdx, 0x3f\l| 0x0040074a   add rax, rdx\l| 0x0040074d   mov rsi, rax\l| 0x00400750   sar rsi, 1\l| 0x00400753   jnz loc.00400757\l", URL="sym.frame_dummy/0x00400730"]
 "0x00400790_0x00400755" [color="red", label="  ; CODE (JMP) XREF 0x0040075f (loc.00400757)\l/ loc: loc.00400755 (2)\l| 0x00400755  loc.00400755:\l| 0x00400755   pop rbp\l\ 0x00400756   ret\l", URL="sym.frame_dummy/0x00400755"]
	"0x00400790_0x00400757" -> "0x00400790_0x00400755" [color="green"];
	"0x00400790_0x00400757" -> "0x00400790_0x00400761" [color="red"];
 "0x00400790_0x00400757" [color="red", label="  ; CODE (JMP) XREF 0x00400753 (sym.register_tm_clones)\l/ loc: loc.00400757 (18)\l| 0x00400757  loc.00400757:\l| 0x00400757   mov edx, 0x0\l| 0x0040075c   test rdx, rdx\l| 0x0040075f   jz loc.00400755\l", URL="sym.frame_dummy/0x00400757"]
 "0x00400790_0x00400761" [color="red", label="| 0x00400761   pop rbp\l| 0x00400762   mov edi, sym.environGLIBC_2.2.5\l| 0x00400767   jmp rdx\l", URL="sym.frame_dummy/0x00400761"]
	"0x00400790_0x00400790" -> "0x00400790_0x004007b5" [color="green"];
	"0x00400790_0x00400790" -> "0x00400790_0x0040079a" [color="red"];
 "0x00400790_0x00400790" [color="red", label="/ function: sym.frame_dummy (57)\l| 0x00400790  sym.frame_dummy:\l| 0x00400790   cmp qword [rip+0x2003b0], 0x0\l| 0x00400798   jz loc.004007b5\l", URL="sym.frame_dummy/0x00400790"]
	"0x00400790_0x0040079a" -> "0x00400790_0x004007b5" [color="green"];
	"0x00400790_0x0040079a" -> "0x00400790_0x004007a4" [color="red"];
 "0x00400790_0x0040079a" [color="red", label="| 0x0040079a   mov eax, 0x0\l| 0x0040079f   test rax, rax\l| 0x004007a2   jz loc.004007b5\l", URL="sym.frame_dummy/0x0040079a"]
	"0x00400790_0x004007a4" -> "0x00400790_0x00400730" [color="blue"];
 "0x00400790_0x004007a4" [color="red", label="| 0x004007a4   push rbp\l| 0x004007a5   mov edi, sym.__JCR_LIST__\l| 0x004007aa   mov rbp, rsp\l| 0x004007ad   call rax\l|    ; unk(unk)\l| 0x004007af   pop rbp\l| 0x004007b0   jmp dword sym.register_tm_clones\l", URL="sym.frame_dummy/0x004007a4"]
	"0x00400790_0x004007b5" -> "0x00400790_0x00400730" [color="blue"];
 "0x00400790_0x004007b5" [color="red", label="  ; CODE (JMP) XREF 0x00400798 (sym.frame_dummy)\l  ; CODE (JMP) XREF 0x004007a2 (sym.frame_dummy)\l/ loc: loc.004007b5 (20)\l| 0x004007b5  loc.004007b5:\l| 0x004007b5   jmp dword sym.register_tm_clones\l", URL="sym.frame_dummy/0x004007b5"]
 "0x00400980_0x00400980" [color="red", label="/ function: sym.__libc_csu_fini (2)\l| 0x00400980  sym.__libc_csu_fini:\l| 0x00400980   rep ret\l", URL="sym.__libc_csu_fini/0x00400980"]
 "0x00400a1c_0x00400a1c" [color="red", label="                ; [15] va=0x00400a1c pa=0x00000a1c sz=9 vsz=9 rwx=-r-x .fini\l/ function: section..fini (9)\l| 0x00400a1c  section..fini:\l| 0x00400a1c   sub rsp, 0x8\l| 0x00400a20   add rsp, 0x8\l\ 0x00400a24   ret\l", URL="section..fini/0x00400a1c"]
	"0x00400990_0x00400990" -> "0x00400990_0x004009f6" [color="green"];
	"0x00400990_0x00400990" -> "0x00400990_0x004009da" [color="red"];
 "0x00400990_0x00400990" [color="red", label="/ function: sym.__libc_csu_init (76)\l| 0x00400990  sym.__libc_csu_init:\l| 0x00400990   mov [rsp-0x28], rbp\l| 0x00400995   mov [rsp-0x20], r12\l; LEA rbp = [0x600b40] = 0x400770 sym.__do_global_dtors_aux\l| 0x0040099a   lea rbp, [rip+0x20019f]\l; LEA r12 = [0x600b38] = 0x400790 sym.frame_dummy\l| 0x004009a1   lea r12, [rip+0x200190]\l| 0x004009a8   mov [rsp-0x18], r13\l| 0x004009ad   mov [rsp-0x10], r14\l| 0x004009b2   mov [rsp-0x8], r15\l| 0x004009b7   mov [rsp-0x30], rbx\l| 0x004009bc   sub rsp, 0x38\l| 0x004009c0   sub rbp, r12\l| 0x004009c3   mov r13d, edi\l| 0x004009c6   mov r14, rsi\l| 0x004009c9   sar rbp, 0x3\l| 0x004009cd   mov r15, rdx\l| 0x004009d0   call dword sym._init\l|    ; section..init()\l| 0x004009d5   test rbp, rbp\l| 0x004009d8   jz loc.004009f6\l", URL="sym.__libc_csu_init/0x00400990"]
 "0x00400990_0x004009da" [color="red", label="| 0x004009da   xor ebx, ebx\l", URL="sym.__libc_csu_init/0x004009da"]
 "0x00400990_0x004009f6" [color="red", label="  ; CODE (JMP) XREF 0x004009d8 (sym.__libc_csu_init)\l/ loc: loc.004009f6 (35)\l| 0x004009f6  loc.004009f6:\l| 0x004009f6   mov rbx, [rsp+0x8]\l| 0x004009fb   mov rbp, [rsp+0x10]\l| 0x00400a00   mov r12, [rsp+0x18]\l| 0x00400a05   mov r13, [rsp+0x20]\l| 0x00400a0a   mov r14, [rsp+0x28]\l| 0x00400a0f   mov r15, [rsp+0x30]\l| 0x00400a14   add rsp, 0x38\l\ 0x00400a18   ret\l", URL="sym.__libc_csu_init/0x004009f6"]
 "0x004005f8_0x004005f8" [color="red", label="                ; [12] va=0x004005f8 pa=0x000005f8 sz=14 vsz=14 rwx=-r-x .init\l  ; CODE (CALL) XREF 0x004009d0 (sym.__libc_csu_init)\l/ function: section..init (14)\l| 0x004005f8  section..init:\l| 0x004005f8   sub rsp, 0x8\l| 0x004005fc   call dword sym.call_gmon_start\l|    ; sym.call_gmon_start()\l| 0x00400601   add rsp, 0x8\l\ 0x00400605   ret\l", URL="section..init/0x004005f8"]
}
